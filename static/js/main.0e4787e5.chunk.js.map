{"version":3,"sources":["types/playertype.ts","components/header.tsx","components/addcharacter.tsx","components/charactercard.tsx","components/characterslist.tsx","components/controls.tsx","components/tracker.tsx","components/footer.tsx","App.tsx","index.tsx"],"names":["PlayerType","Header","react_default","a","createElement","className","Component","AddCharacter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","modOptions","getModOptionDisplay","option","concat","state","character","id","characterName","playerType","PC","initiativeMod","score","options","i","value","push","key","setState","objectSpread","handleAddCharacter","_this2","style","width","display","flexDirection","height","placeholder","onChange","e","handleChangeName","currentTarget","padding","handlePlayerTypeChange","Number","NPC","handleInitiativeModChange","renderModOptions","onClick","disabled","length","CharacterCard","inputRef","React","createRef","newScore","String","editScore","roll","Math","floor","random","setInitiative","removeCharacter","changeScore","test","console","log","toggleEdit","current","focus","_this3","_this$props","turn","containerStyle","margin","backgroundColor","border","alignItems","justifyContent","color","fontWeight","paddingRight","borderRight","cursor","rollInitiative","type","handleScoreChange","target","onKeyUp","handleKeyUp","onBlur","ref","CharactersList","borderLeft","characters","map","index","charactercard_CharacterCard","Controls","buttonStyle","fontSize","borderRadius","handleNextTurnClick","sortCharacter","Tracker","idCounter","sortableCharacters","toConsumableArray","sort","b","removedIndex","filter","contentStyle","flex","addcharacter_AddCharacter","addCharacter","characterslist_CharactersList","number","controls_Controls","sortCharacters","advanceTurn","Footer","moment","year","App","header_Header","tracker_Tracker","footer_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0e4787e5.chunk.js","sourcesContent":["enum PlayerType {\r\n  PC,\r\n  NPC,\r\n}\r\n\r\nexport default PlayerType;\r\n\r\nexport const getStringFromPlayerType = (playerType: PlayerType): string => {\r\n  let retVal;\r\n  if (playerType === PlayerType.PC) {\r\n    retVal = 'PC';\r\n  } else {\r\n    retVal = 'NPC';\r\n  }\r\n  return retVal;\r\n};\r\n","import React, { Component } from 'react';\r\nimport './bookends.css';\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return <header className=\"bookend\">D&amp;D Initiative Tracker</header>;\r\n  }\r\n}\r\n","import React, { Component, ChangeEvent, CSSProperties } from 'react';\r\nimport ICharacter from '../types/character';\r\nimport PlayerType from '../types/playertype';\r\n\r\ninterface IAddCharacterProps {\r\n  handleAddCharacter: (character: ICharacter) => void;\r\n}\r\n\r\ninterface IAddCharacterState {\r\n  character: ICharacter;\r\n}\r\n\r\nexport default class AddCharacter extends Component<\r\n  IAddCharacterProps,\r\n  IAddCharacterState\r\n> {\r\n  constructor(props: IAddCharacterProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      character: {\r\n        id: 0,\r\n        characterName: '',\r\n        playerType: PlayerType.PC,\r\n        initiativeMod: 0,\r\n        score: 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  modOptions: number = 10;\r\n\r\n  getModOptionDisplay = (option: number): string => {\r\n    return option < 0 ? `${option}` : `+${option}`;\r\n  };\r\n\r\n  renderModOptions(): Array<JSX.Element> {\r\n    const options: Array<JSX.Element> = [];\r\n\r\n    // Add all negative values\r\n    for (let i = 0; i < this.modOptions; i++) {\r\n      const value: number = i - 10;\r\n      options.push(\r\n        <option key={value} value={value}>\r\n          {this.getModOptionDisplay(value)}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    // Add zero and all positive values\r\n    for (let i = 0; i < this.modOptions + 1; i++) {\r\n      options.push(\r\n        <option key={i} value={i}>\r\n          {this.getModOptionDisplay(i)}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  handleChangeName(characterName: string): void {\r\n    this.setState({ character: { ...this.state.character, characterName } });\r\n  }\r\n\r\n  handlePlayerTypeChange(playerType: PlayerType): void {\r\n    this.setState({ character: { ...this.state.character, playerType } });\r\n  }\r\n\r\n  handleInitiativeModChange(initiativeMod: number): void {\r\n    this.setState({ character: { ...this.state.character, initiativeMod } });\r\n  }\r\n\r\n  handleAddCharacter(): void {\r\n    this.props.handleAddCharacter(this.state.character);\r\n    this.setState({\r\n      character: {\r\n        ...this.state.character,\r\n        characterName: '',\r\n        playerType: PlayerType.PC,\r\n        initiativeMod: 0,\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const containerStyle: CSSProperties = {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      height: '2.5rem',\r\n      width: '100%',\r\n    };\r\n\r\n    return (\r\n      <div style={{ width: '100%' }}>\r\n        <div style={containerStyle}>\r\n          <input\r\n            value={this.state.character.characterName}\r\n            placeholder=\"Character Name\"\r\n            onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n              this.handleChangeName(e.currentTarget.value)\r\n            }\r\n            style={{ width: '50%', padding: '8px' }}\r\n          />\r\n          <select\r\n            value={this.state.character.playerType}\r\n            onChange={(e: ChangeEvent<HTMLSelectElement>) =>\r\n              this.handlePlayerTypeChange(Number(e.currentTarget.value))\r\n            }\r\n            style={{ width: '10%' }}\r\n          >\r\n            <option value={PlayerType.PC}>PC</option>\r\n            <option value={PlayerType.NPC}>NPC</option>\r\n          </select>\r\n          <select\r\n            value={this.state.character.initiativeMod}\r\n            onChange={(e: ChangeEvent<HTMLSelectElement>) =>\r\n              this.handleInitiativeModChange(Number(e.currentTarget.value))\r\n            }\r\n            style={{ width: '10%' }}\r\n          >\r\n            {this.renderModOptions()}\r\n          </select>\r\n          <button\r\n            style={{ width: '30%' }}\r\n            onClick={() => this.handleAddCharacter()}\r\n            disabled={this.state.character.characterName.length === 0}\r\n          >\r\n            Add Character\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, CSSProperties, KeyboardEvent } from 'react';\r\nimport ICharacter from '../types/character';\r\nimport { getStringFromPlayerType } from '../types/playertype';\r\n\r\ninterface ICharacterCardProps {\r\n  character: ICharacter;\r\n  setInitiative: (id: number, initiative: number) => void;\r\n  removeCharacter: (id: number) => void;\r\n  turn: boolean;\r\n}\r\n\r\ninterface ICharacterCardState {\r\n  newScore: string;\r\n  editScore: boolean;\r\n}\r\n\r\nexport default class CharacterCard extends Component<\r\n  ICharacterCardProps,\r\n  ICharacterCardState\r\n> {\r\n  constructor(props: ICharacterCardProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      newScore: String(this.props.character.score),\r\n      editScore: false,\r\n    };\r\n  }\r\n\r\n  inputRef = React.createRef<HTMLInputElement>();\r\n\r\n  rollInitiative(id: number): void {\r\n    const roll =\r\n      Math.floor(Math.random() * 20 + 1) + this.props.character.initiativeMod;\r\n    this.props.setInitiative(this.props.character.id, roll);\r\n  }\r\n\r\n  removeCharacter(id: number): void {\r\n    this.props.removeCharacter(id);\r\n  }\r\n\r\n  handleKeyUp(e: KeyboardEvent<HTMLInputElement>) {\r\n    if (e.key === 'Enter') {\r\n      this.changeScore();\r\n    }\r\n  }\r\n\r\n  handleScoreChange(value: string): void {\r\n    if (/^[0-9]*$/.test(value)) {\r\n      console.log('We got here');\r\n      this.setState({ newScore: value });\r\n    }\r\n  }\r\n\r\n  changeScore(): void {\r\n    this.props.setInitiative(\r\n      this.props.character.id,\r\n      Number(this.state.newScore)\r\n    );\r\n    this.toggleEdit();\r\n  }\r\n\r\n  toggleEdit(): void {\r\n    this.setState({ editScore: !this.state.editScore }, () => {\r\n      if (this.inputRef.current !== null) {\r\n        this.inputRef.current.focus();\r\n        this.setState({ newScore: String(this.props.character.score) });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { character, turn } = this.props;\r\n\r\n    const containerStyle: CSSProperties = {\r\n      margin: '15px',\r\n      padding: '5px',\r\n      backgroundColor: turn\r\n        ? 'rgba(128, 0, 0, 0.5)'\r\n        : 'rgba(255, 255, 255, 0.5)',\r\n      width: '85%',\r\n      height: '3.4rem',\r\n      border: '2px solid black',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-evenly',\r\n      color: turn ? 'white' : 'black',\r\n    };\r\n\r\n    const statsStyle: CSSProperties = {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      width: '50%',\r\n      fontWeight: 'bold',\r\n      paddingRight: '10%',\r\n      borderRight: '2px solid black',\r\n    };\r\n\r\n    const controlStyle: CSSProperties = {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-evenly',\r\n      width: '40%',\r\n    };\r\n\r\n    return (\r\n      <div style={containerStyle}>\r\n        <div style={statsStyle}>\r\n          <span>{character.characterName}</span>\r\n          <span>{getStringFromPlayerType(character.playerType)}</span>\r\n          <span>\r\n            {character.initiativeMod < 0\r\n              ? `${character.initiativeMod}`\r\n              : `+${character.initiativeMod}`}\r\n          </span>\r\n        </div>\r\n        <div style={controlStyle}>\r\n          <i\r\n            className=\"fas fa-dice-d20\"\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={() => this.rollInitiative(character.id)}\r\n          />\r\n          {this.state.editScore ? (\r\n            <span>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.newScore}\r\n                onChange={e => this.handleScoreChange(e.target.value)}\r\n                onKeyUp={e => this.handleKeyUp(e)}\r\n                onBlur={() => this.changeScore()}\r\n                style={{ width: '20px' }}\r\n                ref={this.inputRef}\r\n              />\r\n            </span>\r\n          ) : (\r\n            <span\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={() => this.toggleEdit()}\r\n            >\r\n              {character.score}\r\n            </span>\r\n          )}\r\n          <i\r\n            className=\"fas fa-trash-alt\"\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={() => this.removeCharacter(character.id)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, CSSProperties } from 'react';\r\nimport ICharacter from '../types/character';\r\nimport CharacterCard from './charactercard';\r\n\r\ninterface ICharactersListProps {\r\n  characters: Array<ICharacter>;\r\n  setInitiative: (id: number, value: number) => void;\r\n  removeCharacter: (id: number) => void;\r\n  turn: number;\r\n}\r\n\r\ninterface ICharactersListState {}\r\n\r\nexport default class CharactersList extends Component<\r\n  ICharactersListProps,\r\n  ICharactersListState\r\n> {\r\n  render() {\r\n    const containerStyle: CSSProperties = {\r\n      padding: '15px',\r\n      width: '50%',\r\n      borderLeft: '2px solid white',\r\n      borderRight: '2px solid white',\r\n    };\r\n\r\n    return (\r\n      <div style={containerStyle}>\r\n        {this.props.characters.map(\r\n          (character: ICharacter, index: number): JSX.Element => (\r\n            <CharacterCard\r\n              key={index}\r\n              character={character}\r\n              setInitiative={this.props.setInitiative}\r\n              removeCharacter={this.props.removeCharacter}\r\n              turn={this.props.turn === index}\r\n            />\r\n          )\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, CSSProperties } from 'react';\r\n\r\ninterface IControlsProps {\r\n  sortCharacter: () => void;\r\n  handleNextTurnClick: () => void;\r\n}\r\n\r\ninterface IControlsState {}\r\n\r\nexport default class Controls extends Component<\r\n  IControlsProps,\r\n  IControlsState\r\n> {\r\n  render() {\r\n    const containerStyle: CSSProperties = {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-evenly',\r\n      alignItems: 'center',\r\n      width: '100%',\r\n    };\r\n\r\n    const buttonStyle: CSSProperties = {\r\n      height: '15%',\r\n      width: '80%',\r\n      fontSize: '30px',\r\n      borderRadius: '35%',\r\n    };\r\n\r\n    return (\r\n      <div style={containerStyle}>\r\n        <button\r\n          style={buttonStyle}\r\n          onClick={() => this.props.handleNextTurnClick()}\r\n        >\r\n          Next Turn\r\n        </button>\r\n        <button style={buttonStyle} onClick={() => this.props.sortCharacter()}>\r\n          Sort\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, CSSProperties } from 'react';\r\nimport AddCharacter from './addcharacter';\r\nimport ICharacter from '../types/character';\r\nimport CharactersList from './characterslist';\r\nimport PlayerType from '../types/playertype';\r\nimport Controls from './controls';\r\n\r\ninterface ITrackerProps {}\r\n\r\ninterface ITrackerState {\r\n  characters: Array<ICharacter>;\r\n  turn: number;\r\n  idCounter: number;\r\n}\r\n\r\nexport default class Tracker extends Component<ITrackerProps, ITrackerState> {\r\n  constructor(props: ITrackerProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      characters: [],\r\n      turn: 0,\r\n      idCounter: 0,\r\n    };\r\n  }\r\n\r\n  sortCharacters(): void {\r\n    const sortableCharacters = [...this.state.characters];\r\n\r\n    sortableCharacters.sort(\r\n      (a: ICharacter, b: ICharacter): number => {\r\n        let retVal: number;\r\n        if (a.score > b.score) {\r\n          retVal = -1;\r\n        } else if (a.score < b.score) {\r\n          retVal = 1;\r\n        } else {\r\n          if (\r\n            a.playerType === PlayerType.PC &&\r\n            b.playerType === PlayerType.NPC\r\n          ) {\r\n            retVal = -1;\r\n          } else if (\r\n            a.playerType === PlayerType.NPC &&\r\n            b.playerType === PlayerType.PC\r\n          ) {\r\n            retVal = 1;\r\n          } else {\r\n            retVal = 0;\r\n          }\r\n        }\r\n\r\n        return retVal;\r\n      }\r\n    );\r\n\r\n    this.setState({ characters: sortableCharacters });\r\n  }\r\n\r\n  setInitiative(id: number, value: number): void {\r\n    this.setState({\r\n      characters: this.state.characters.map(character => {\r\n        let retVal;\r\n        if (character.id === id) {\r\n          retVal = {\r\n            ...character,\r\n            score: value,\r\n          };\r\n        } else {\r\n          retVal = character;\r\n        }\r\n        return retVal;\r\n      }),\r\n    });\r\n  }\r\n\r\n  removeCharacter(id: number): void {\r\n    let removedIndex = -1;\r\n    for (let i = 0; i < this.state.characters.length; i++) {\r\n      if (this.state.characters[i].id === id) {\r\n        removedIndex = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    let turn;\r\n    if (\r\n      removedIndex === this.state.turn &&\r\n      removedIndex === this.state.characters.length - 1\r\n    ) {\r\n      turn = 0;\r\n    } else if (removedIndex === turn) {\r\n      turn = this.state.turn;\r\n    } else if (removedIndex < this.state.turn) {\r\n      turn = this.state.turn - 1;\r\n    } else {\r\n      turn = this.state.turn;\r\n    }\r\n\r\n    this.setState({\r\n      characters: this.state.characters.filter(\r\n        character => character.id !== id\r\n      ),\r\n      turn: turn,\r\n    });\r\n  }\r\n\r\n  addCharacter(character: ICharacter): void {\r\n    this.setState({\r\n      characters: [\r\n        ...this.state.characters,\r\n        { ...character, id: this.state.idCounter },\r\n      ],\r\n      idCounter: this.state.idCounter + 1,\r\n    });\r\n  }\r\n\r\n  advanceTurn(): void {\r\n    this.setState({\r\n      turn:\r\n        this.state.turn >= this.state.characters.length - 1\r\n          ? 0\r\n          : this.state.turn + 1,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const containerStyle: CSSProperties = {\r\n      backgroundColor: 'rgba(0, 0, 0, .8)',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      flex: '1 1 auto',\r\n    };\r\n\r\n    const contentStyle: CSSProperties = {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      flex: '1 1 auto',\r\n    };\r\n\r\n    return (\r\n      <div style={containerStyle}>\r\n        <AddCharacter\r\n          handleAddCharacter={(character: ICharacter) =>\r\n            this.addCharacter(character)\r\n          }\r\n        />\r\n        <div style={contentStyle}>\r\n          <CharactersList\r\n            characters={this.state.characters}\r\n            setInitiative={(id, number) => this.setInitiative(id, number)}\r\n            removeCharacter={id => this.removeCharacter(id)}\r\n            turn={this.state.turn}\r\n          />\r\n          <div style={contentStyle}>\r\n            {this.state.characters.length > 0 && (\r\n              <Controls\r\n                sortCharacter={() => this.sortCharacters()}\r\n                handleNextTurnClick={() => this.advanceTurn()}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, CSSProperties } from 'react';\r\nimport './bookends.css';\r\nimport moment from 'moment';\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    const footerStyle: CSSProperties = {\r\n      fontSize: '15px'\r\n    };\r\n\r\n    return <footer style={footerStyle} className=\"bookend\">&copy; Jacob Kedar Krevat {moment().year()}</footer>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Header from './components/header';\r\nimport Tracker from './components/tracker';\r\nimport Footer from './components/footer';\r\nimport './app.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Tracker />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}